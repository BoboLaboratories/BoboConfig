import java.time.LocalDateTime

plugins {
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'maven-publish'
    id 'java-library'
}

group = 'net.bobolabs.config'
version = '2.1.1'

repositories {
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }      // Paper (for SnakeYAML 1.33-SNAPSHOT)
}

dependencies {
    compileOnly 'org.jetbrains:annotations:24.0.1'                          // JetBrains annotation
    compileOnly('org.yaml:snakeyaml') {                                     // SnakeYAML
        version {
            strictly('[1.33-SNAPSHOT, 2.0]')
            prefer '2.0'
        }
    }

    // Test
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation('org.yaml:snakeyaml') {
        version {
            strictly('[1.33-SNAPSHOT, 2.0]')
            prefer '2.0'
        }
    }
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = 'BoboLabs'
            url = 'https://repo.bobolabs.net/repository/maven-releases/'
            credentials {
                username = project.property('bobolabs.user')
                password = project.property('bobolabs.key')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

jar {
    from "LICENSE.txt"
}

license {
    header = project.file('HEADER.txt')
    include '**/*.java'

    properties {
        year = LocalDateTime.now().getYear()
        projectName = 'BoboConfig'
    }
}